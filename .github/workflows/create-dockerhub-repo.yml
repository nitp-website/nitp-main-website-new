name: üê≥ Create Docker Hub Repository

on:
  workflow_dispatch:

jobs:
  create-repo:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v4

    - name: üîç Show deployment info
      run: |
        echo "üîó Repository: ${{ github.repository }}"
        echo "üåø Branch: ${{ github.ref_name }}"
        echo "üìù Commit: ${{ github.sha }}"
        echo "üë§ Actor: ${{ github.actor }}"

    - name: üîë Create Docker Hub Repository
      run: |
        # Define Docker Hub API endpoint
        DOCKER_HUB_API="https://hub.docker.com/v2/repositories"
        
        # Login to Docker Hub API
        TOKEN=$(curl -s -X POST \
          -H "Content-Type: application/json" \
          -d '{"username": "${{ secrets.DOCKERHUB_USERNAME }}", "password": "${{ secrets.DOCKERHUB_TOKEN }}"}' \
          https://hub.docker.com/v2/users/login/ | jq -r .token)
        
        # Check if token was retrieved successfully
        if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
          echo "‚ùå Failed to login to Docker Hub API"
          exit 1
        fi
        
        # Check if repository already exists
        REPO_CHECK=$(curl -s -H "Authorization: JWT $TOKEN" \
          "$DOCKER_HUB_API/${{ secrets.DOCKERHUB_USERNAME }}/nitp-website")
        
        # Create repository if it doesn't exist
        if [[ $REPO_CHECK == *"not found"* ]]; then
          echo "üî® Creating Docker Hub repository: ${{ secrets.DOCKERHUB_USERNAME }}/nitp-website"
          
          curl -s -X POST \
            -H "Authorization: JWT $TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"namespace":"${{ secrets.DOCKERHUB_USERNAME }}","name":"nitp-website","description":"NIT Patna official website","is_private":false}' \
            "$DOCKER_HUB_API/${{ secrets.DOCKERHUB_USERNAME }}/"
            
          echo "‚úÖ Repository created successfully"
        else
          echo "‚úÖ Repository already exists"
        fi
